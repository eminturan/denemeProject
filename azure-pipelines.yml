pool:
  name: DenemeLocalPool
  demands: maven

resources:
  repositories:
  - repository: templates
    type: github
    name: eminturan/azure-templates
    endpoint: eminturan

#Your build pipeline references an undefined variable named ‘Parameters.mavenPOMFile’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

variables:
- name: namespace
  value: deneme-dev
- name: app_name
  value: denemeproject
- name: helm_path
  value: backend-api-0.1.0.tgz
- name: project_env
  value: dev
- name: toolset
  value: 'maven'

stages:
- stage: Code Build Stage
  displayName: Code Build Stage
  jobs:
  - job: Code Build Job
    displayName: Code Build Job
    steps:
      - checkout: templates
      - template: ./code-build.yml@templates
        parameters:
           workingDirectory: '$(Build.Repository.LocalPath)'
           toolset: ${{ variables.toolset }}

steps:
- task: Maven@3
  displayName: 'Maven pom.xml'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean install -Dmaven.test.skip=true'
    publishJUnitResults: false
  enabled: false

- task: Docker@0
  displayName: 'Build an image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'docker_eminturan'
    defaultContext: false
    context: .
  enabled: false

- task: Docker@0
  displayName: 'Push an image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'docker_eminturan'
    action: 'Push an image'
  enabled: false

- task: oc-cmd@2
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'ocp-test2'
    cmd: 'get po -n $(namespace)'
    uselocalOc: true
  enabled: false

- task: CmdLine@2
  displayName: Download Helm Chart
  inputs:
    script: |
      wget https://raw.githubusercontent.com/eminturan/azure-templates/main/backend-api-0.0.1.tgz
  enabled: false

- task: CmdLine@2
  displayName: Helm Deploy Commands
  inputs:
    script: |
      helm upgrade -n $(namespace) --install $(app_name) $(helm_path) -f "$(Build.Repository.LocalPath)/values.yaml" --set image.$(project_env).tag=$(Build.BuildId)
  enabled: false
